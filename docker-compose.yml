version: "3"

services:
  bumblebee:
    build: .
    image: bumblebee
    stdin_open: true
    tty: true
    ports:
    - 8000:8000
    environment: &bb_env
      DEBUG: "True"

      DB_HOST: mariadb
      DB_USER: ${DB_USER:-root}
      DB_PASSWORD: ${DB_PASSWORD:-toor}

      REDIS_HOST: redis
    env_file:
      - .env
    volumes:
    - .:/app
    restart: unless-stopped
    command: django-admin runserver 0.0.0.0:8000
    depends_on:
      mariadb:
        condition: service_healthy
      redis:
        condition: service_healthy
      init:
        condition: service_completed_successfully
      keycloak:
        condition: service_healthy
      guacamole:
        condition: service_healthy
    links:
    - mariadb:mariadb
    - redis:redis

  init:
    build: .
    links:
    - mariadb:mariadb
    - redis:redis
    environment:
      <<: *bb_env
      DJANGO_MIGRATE: "True"
    volumes:
    - .:/app
    restart: on-failure
    depends_on:
      mariadb:
        condition: service_healthy
    command: /docker-setup.sh

  rqscheduler:
    build: .
    environment: *bb_env
    env_file:
      - .env
    restart: on-failure
    command: django-admin rqscheduler -i5
    depends_on:
      mariadb:
        condition: service_healthy
      redis:
        condition: service_healthy
      init:
        condition: service_completed_successfully
    links:
    - mariadb:mariadb
    - redis:redis
    volumes:
    - .:/app

  rqworker:
    build: .
    links:
    - mariadb:mariadb
    - redis:redis
    environment: *bb_env
    env_file:
    - .env
    restart: on-failure
    command: django-admin rqworker
    depends_on:
      mariadb:
        condition: service_healthy
      redis:
        condition: service_healthy
      init:
        condition: service_completed_successfully
    volumes:
    - .:/app

  mariadb:
    image: mariadb
    environment:
      MARIADB_ROOT_PASSWORD: ${DB_PASSWORD:-toor}
    ports:
    - 3306:3306
    volumes:
    - dbdata:/var/lib/mysql
    - ./initdb:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD", "mysqladmin", "--user=${DB_USER:-root}", "--password=${DB_PASSWORD:-toor}", "ping", "--silent" ]
      interval: 10s
      retries: 9
      start_period: 5s

  redis:
    image: redis:alpine
    ports:
    - 6379:6379
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      retries: 9
      start_period: 5s

  guacd:
    image: guacamole/guacd:1.3.0
    restart: unless-stopped
    ports:
    - 4822:4822
    healthcheck:
      # Use healthcheck command from guacd Dockerfile
      interval: 10s
      retries: 9
      start_period: 5s

  guacamole:
    image: guacamole/guacamole:1.3.0
    restart: unless-stopped
    environment:

      GUACD_HOSTNAME: guacd

      # Guacamole has to share the database with Bumblebee.
      MYSQL_HOSTNAME: mariadb
      MYSQL_DATABASE: bumblebee
      MYSQL_USER: ${DB_USER:-root}
      MYSQL_PASSWORD: ${DB_PASSWORD:-toor}

    env_file:
      - .env
    ports:
    - 9000:8080
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:8080/guacamole" ]
      interval: 10s
      retries: 9
      start_period: 5s
    depends_on:
      mariadb:
        condition: service_healthy
      guacd:
        condition: service_healthy

  keycloak:
    image: quay.io/keycloak/keycloak:18.0.2
    environment:
      KC_DB: mariadb
      KC_DB_URL: jdbc:mariadb://mariadb/keycloak
      KC_DB_USERNAME: ${DB_USER:-root}
      KC_DB_PASSWORD: ${DB_PASSWORD:-toor}
      KEYCLOAK_ADMIN: ${KC_USER:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KC_PASSWORD:-admin}
    ports:
      - 8080:8080
    depends_on:
      mariadb:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:8080/realms/master" ]
      interval: 10s
      retries: 9
      start_period: 5s
    command: start-dev

volumes:
  dbdata:
  redis_data:
